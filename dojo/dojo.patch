Index: dojo/_base/xhr.js
===================================================================
--- dojo/_base/xhr.js	(revision 12377)
+++ dojo/_base/xhr.js	(working copy)
@@ -623,18 +623,30 @@
 	}
 	=====*/
 
+	dojo.xhr = function(/*String*/ method, /*dojo.__xhrArgs*/ args, /*boolean?*/ hasBody){
+		//	summary: 
+		//		Sends an HTTP request with the given method. If the request has an 
+		//		HTTP body, then pass true for hasBody. The method argument should be uppercase.
+		//		Also look at dojo.xhrGet(), xhrPost(), xhrPut() and dojo.xhrDelete() for shortcuts
+		//		for those HTTP methods. There are also methods for "raw" PUT and POST methods
+		//		via dojo.rawXhrPut() and dojo.rawXhrPost() respectively.
+		var dfd = _makeXhrDeferred(args);
+		if(!hasBody){
+			_d._ioAddQueryToUrl(dfd.ioArgs);
+		}
+		return _doIt(method, dfd); // dojo.Deferred
+	}
+
 	dojo.xhrGet = function(/*dojo.__xhrArgs*/ args){
 		//	summary: 
 		//		Sends an HTTP GET request to the server.
-		var dfd = _makeXhrDeferred(args);
-		_d._ioAddQueryToUrl(dfd.ioArgs);
-		return _doIt("GET", dfd); // dojo.Deferred
+		return dojo.xhr("GET", args); //dojo.Deferred
 	}
 
 	dojo.xhrPost = function(/*dojo.__xhrArgs*/ args){
 		//summary: 
 		//		Sends an HTTP POST request to the server.
-		return _doIt("POST", _makeXhrDeferred(args)); // dojo.Deferred
+		return dojo.xhr("POST", args, true); // dojo.Deferred
 	}
 
 	dojo.rawXhrPost = function(/*dojo.__xhrArgs*/ args){
@@ -651,7 +663,7 @@
 	dojo.xhrPut = function(/*dojo.__xhrArgs*/ args){
 		//	summary:
 		//		Sends an HTTP PUT request to the server.
-		return _doIt("PUT", _makeXhrDeferred(args)); // dojo.Deferred
+		return dojo.xhr("PUT", args, true); // dojo.Deferred
 	}
 
 	dojo.rawXhrPut = function(/*dojo.__xhrArgs*/ args){
@@ -672,9 +684,7 @@
 	dojo.xhrDelete = function(/*dojo.__xhrArgs*/ args){
 		//	summary:
 		//		Sends an HTTP DELETE request to the server.
-		var dfd = _makeXhrDeferred(args);
-		_d._ioAddQueryToUrl(dfd.ioArgs);
-		return _doIt("DELETE", dfd); // dojo.Deferred
+		return dojo.xhr("DELETE", args); //dojo.Deferred
 	}
 
 	/*
Index: dojo/DeferredList.js
===================================================================
--- dojo/DeferredList.js	(revision 12377)
+++ dojo/DeferredList.js	(working copy)
@@ -74,7 +74,7 @@
 		//	Gathers the results of the deferreds for packaging
 		//	as the parameters to the Deferred Lists' callback
 
-		var d = new dojo.DeferedList(deferredList, false, true, false);
+		var d = new dojo.DeferredList(deferredList, false, true, false);
 		d.addCallback(function (results) {
 			var ret = [];
 			for (var i = 0; i < results.length; i++) {
